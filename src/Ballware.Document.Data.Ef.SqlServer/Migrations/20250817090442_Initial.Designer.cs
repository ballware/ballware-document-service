// <auto-generated />
using System;
using Ballware.Document.Data.Ef.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ballware.Document.Data.Ef.SqlServer.Migrations
{
    [DbContext(typeof(DocumentDbContext))]
    [Migration("20250817090442_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ballware.Document.Data.Persistables.Document", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_stamp");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_name");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("entity");

                    b.Property<DateTime?>("LastChangeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_change_stamp");

                    b.Property<Guid?>("LastChangerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("last_changer_id");

                    b.Property<string>("ReportParameter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("report_parameter");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tenant_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("pk_document");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("ix_document_tenant_id");

                    b.HasIndex("TenantId", "Uuid")
                        .IsUnique()
                        .HasDatabaseName("ix_document_tenant_id_uuid");

                    b.ToTable("document", (string)null);
                });

            modelBuilder.Entity("Ballware.Document.Data.Persistables.Notification", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_stamp");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("document_id");

                    b.Property<string>("DocumentParams")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("document_params");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("identifier");

                    b.Property<DateTime?>("LastChangeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_change_stamp");

                    b.Property<Guid?>("LastChangerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("last_changer_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tenant_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("pk_notification");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("ix_notification_tenant_id");

                    b.HasIndex("TenantId", "Identifier")
                        .IsUnique()
                        .HasDatabaseName("ix_notification_tenant_id_identifier");

                    b.HasIndex("TenantId", "Uuid")
                        .IsUnique()
                        .HasDatabaseName("ix_notification_tenant_id_uuid");

                    b.ToTable("notification", (string)null);
                });

            modelBuilder.Entity("Ballware.Document.Data.Persistables.Subscription", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<bool>("Attachment")
                        .HasColumnType("bit")
                        .HasColumnName("attachment");

                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("attachment_file_name");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreateStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_stamp");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creator_id");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<DateTime?>("LastChangeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_change_stamp");

                    b.Property<Guid?>("LastChangerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("last_changer_id");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_error");

                    b.Property<DateTime?>("LastSendStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_send_stamp");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mail");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("notification_id");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tenant_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("pk_subscription");

                    b.HasIndex("Frequency")
                        .HasDatabaseName("ix_subscription_frequency");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("ix_subscription_tenant_id");

                    b.HasIndex("TenantId", "Uuid")
                        .IsUnique()
                        .HasDatabaseName("ix_subscription_tenant_id_uuid");

                    b.ToTable("subscription", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
